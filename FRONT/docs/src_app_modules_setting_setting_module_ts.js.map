{"version":3,"sources":["./src/app/modules/setting/email/email.component.ts","./src/app/modules/setting/email/email.component.html","./src/app/modules/setting/faq/faq.component.ts","./src/app/modules/setting/faq/faq.component.html","./src/app/modules/setting/payment/payment.component.ts","./src/app/modules/setting/payment/payment.component.html","./src/app/modules/setting/setting-routing.module.ts","./src/app/modules/setting/setting.component.ts","./src/app/modules/setting/setting.component.html","./src/app/modules/setting/setting.module.ts","./src/app/services/setting.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMwB;;;;;;;;;;;IC4BhB,4EAKC;IACC,gGACF;IAAA,4DAAY;;;IACZ,4EAKC;IACC,wEAAY;IAAA,yEAAQ;IAAA,oEAAS;IAAA,4DAAS;IACxC,4DAAY;;ADlCb,MAAM,cAAc;IAKzB,YACU,YAAyB,EACzB,gBAAgC,EAChC,aAA2B;QAF3B,iBAAY,GAAZ,YAAY,CAAa;QACzB,qBAAgB,GAAhB,gBAAgB,CAAgB;QAChC,kBAAa,GAAb,aAAa,CAAc;QALrC,SAAI,GAAG,IAAI,CAAC;QAOV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxC,aAAa,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,4DAAgB,EAAE,+DAAmB,CAAC,CAAC;YAC3E,gBAAgB,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAC7D,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAE;YACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACvB,aAAa,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,IAAI,EAAE;gBAC3C,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,eAAe,IAAI,EAAE;aAClD,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;YACnD,OAAO;SACR;QAED,IAAI,CAAC,gBAAgB;aAClB,iBAAiB,CAAC;YACjB,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB;YACvD,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa;SAClD,CAAC;aACD,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;;4EA3CU,cAAc;4GAAd,cAAc;QCf3B,wEAA8C;QAAA,6EAAa;QAAA,4DAAK;QAChE,gEAAM;QAEN,yEAAiB;QACf,yEAAiE;QAC/D,kEAA4D;QAC5D,wEAA2D;QACzD,2EACF;QAAA,4DAAK;QACP,4DAAM;QACR,4DAAM;QAEN,qEAAI;QAAA,yEAAQ;QAAA,4EAAgB;QAAA,4DAAS;QAAA,4DAAK;QAC1C,qEAAG;QACD,0PAGA;QAAA,wEACG;QAAA,gEAAI;QAAA,4DACN;QACH,4DAAI;QAEJ,0EAA2B;QACzB,2EAA+D;QAAhC,2IAAY,sBAAkB,IAAC;QAC5D,0EAA2C;QACzC,qFAAkC;QAChC,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEAME;QACF,yHAOY;QACZ,yHAOY;QACd,4DAAiB;QACnB,4DAAM;QACN,2EAAsC;QACpC,qFAAkC;QAChC,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEAKE;QACF,8EAOC;QAHC,+JAAsB;QAItB,4EAAU;QAAA,wDAA4C;QAAA,4DAAW;QACnE,4DAAS;QACX,4DAAiB;QACnB,4DAAM;QAEN,8EAAmD;QAAA,mEAAO;QAAA,4DAAS;QACrE,4DAAO;QACT,4DAAM;QAEN,iEAAM;;QAvDE,2DAAwB;QAAxB,qFAAwB;QAYrB,0DAGD;QAHC,wKAGD;QAKC,0DAGD;QAHC,yKAGD;QAYA,0DAAmC;QAAnC,gGAAmC;QAQnC,0DAAmC;QAAnC,wFAAmC;QAGzB,0DAA4C;QAA5C,2GAA4C;;;;;;;;;;;;;;;;;;;;;AC9DzD,MAAM,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wEALU,YAAY;0GAAZ,YAAY;QCPzB,wEAA6B;QAAA,mGAAwC;QAAA,4DAAK;QAC1E,gFAAe;QACX,yFAA4F;QACxF,6FAA4B;QAC1B,qFAA4D;QAC1D,wGACF;QAAA,4DAAkB;QACpB,4DAA6B;QAC7B,wEAA8B;QAAA,8WAE1B;QAAA,gEAAI;QACJ,+EAAa;QAAA,wEAAuC;QAAA,oFAAwB;QAAA,4DAAI;QAAC,0GACjF;QAAA,iEAAI;QACJ,gMACA;QAAA,iEAAI;QACJ,+VACA;QAAA,iEAAI;QACJ,+OACA;QAAA,iEAAI;QACJ,qJACA;QAAA,iEAAI;QACJ,4QACA;QAAA,iEAAI;QACJ,yIACA;QAAA,iEAAI;QACF,0MACA;QAAA,iEAAI;QACJ,8PACA;QAAA,iEAAI;QACJ,wOAEF;QAAA,4DAAK;QAEX,4DAAsB;QAEtB,0FAA4F;QAC1F,8FAA4B;QAC1B,sFAA4D;QAC1D,qIACF;QAAA,4DAAkB;QACpB,4DAA6B;QAC7B,yEAA8B;QAAA,geAC9B;QAAA,4DAAK;QACP,4DAAsB;QAGtB,0FAA4F;QAC1F,8FAA4B;QAC1B,sFAA4D;QAC1D,4FACF;QAAA,4DAAkB;QACpB,4DAA6B;QAC7B,yEAA8B;QAAA,yFAC1B;QAAA,iEAAI;QACJ,wJACA;QAAA,iEAAI;QACJ,8MACA;QAAA,iEAAI;QACJ,gHACA;QAAA,iEAAI;QACJ,oOACA;QAAA,iEAAI;QACJ,6FACJ;QAAA,4DAAK;QACP,4DAAsB;QAEtB,0FAA4F;QAC1F,8FAA4B;QAC1B,sFAA4D;QAC1D,4GACF;QAAA,4DAAkB;QACpB,4DAA6B;QAC7B,yEAA8B;QAAA,0RAC5B;QAAA,iEAAI;QAEF,qNACA;QAAA,iEAAI;QACJ,oJACA;QAAA,iEAAI;QACJ,uaACA;QAAA,iEAAI;QACJ,iEAAI;QACJ,qGACA;QAAA,iEAAI;QACL,iEAAI;QACH,uFACA;QAAA,iEAAI;QACJ,gFACA;QAAA,iEAAI;QACJ,qFACA;QAAA,iEAAI;QACJ,iGACA;QAAA,iEAAI;QACJ,0EACA;QAAA,iEAAI;QACJ,kGACA;QAAA,iEAAI;QACH,iEAAI;QACL,qHACA;QAAA,iEAAI;QACJ,iEAAI;QACJ,wiBACA;QAAA,iEAAI;QACJ,qLACJ;QAAA,4DAAK;QACP,4DAAsB;QAGtB,0FAA4F;QAC1F,8FAA4B;QAC1B,sFAA4D;QAC1D,8FACF;QAAA,4DAAkB;QACpB,4DAA6B;QAC7B,yEAA8B;QAAA,kRAC9B;QAAA,4DAAK;QACP,4DAAsB;QAEtB,0FAA4F;QAC1F,8FAA4B;QAC1B,sFAA4D;QAC1D,iHACF;QAAA,4DAAkB;QACpB,4DAA6B;QAC7B,0EAA8B;QAAA,8MAC5B;QAAA,kEAAI;QACN,4DAAK;QACP,4DAAsB;QAE5B,4DAAgB;;;;;;;;;;;;;;;;;;;;;ACjI2B;;;;AAUpC,MAAM,gBAAgB;IAE3B,YAAoB,SAAoB,EACd,SAAS,EAC3B,cAA4B;QAFhB,cAAS,GAAT,SAAS,CAAW;QACd,cAAS,GAAT,SAAS;QAC3B,mBAAc,GAAd,cAAc,CAAc;IAAG,CAAC;IAExC,QAAQ;QACP,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAC3B,CAAC,CAAC,GAAG,GAAG,mCAAmC,CAAC;QAC5C,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAC,CAAC,CAAC;QAElD,IAAI,EAAE,GAAG,IAAU,MAAO,CAAC,aAAa,CAAC,CAAC,2CAA2C,EAAE;YACrF,MAAM,EAAE,OAAO;SAChB,CAAC;QAEF,EAAE,CAAC,QAAQ,CAAC;YACV,UAAU,EAAE;gBACV,EAAE,EAAE,gDAAgD;aACrD;YACD,MAAM,EAAE;gBACN,SAAS,EAAE,gBAAgB;gBAC3B,KAAK,EAAE,OAAO,EAAE,+CAA+C;aAChE;SACF,CAAC,CAAC;IAEH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,mEAAmE,CAAC;IACtG,CAAC;;gFA/BU,gBAAgB,yLAGnB,qDAAQ;8GAHL,gBAAgB;QCV7B,yEAAuB;QACnB,yEAAwC;QACpC,yEAA+C;QAC3C,yEAAsH;QAClH,oEAAiE;QACjE,4EAAoF;QAA5E,wIAAS,iBAAa,IAAC;QAAqD,kEAAO;QAAA,4DAAS;QACxG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;;;;;;;;;;ACRiD;AACA;AACQ;AACN;AACN;;;AAEnD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gEAAgB,EAAC;IACvC,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wEAAgB,EAAC;IAC9C,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,4DAAY,EAAC;CACvC,CAAC;AAMK,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHAHtB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,oBAAoB,oFAFrB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNjB,MAAM,gBAAgB;IAK3B,YACU,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAGlC;;;;;;;;cAQM;IACP,CAAC;IAED,QAAQ;IAER,CAAC;;gFAtBU,gBAAgB;8GAAhB,gBAAgB;QCV7B,qEAAI;QAAA,wFAAwB;QAAA,4DAAK;QACjC,yEAAsD;QAClD,yEAAsC;QAClC,oFAAqC;QACjC,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,sEAAiB;QACjB,8EAAsD;QAAA,oEAAS;QAAA,4DAAW;QAC9E,4DAAiB;QACrB,4DAAM;QAEN,0EAAsC;QAClC,qFAAqC;QACjC,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEAAiB;QACjB,+EAAsD;QAAA,qEAAS;QAAA,4DAAW;QAC9E,4DAAiB;QACrB,4DAAM;QAEN,0EAAsC;QAClC,qFAAqC;QACjC,6EAAW;QAAA,kFAAsB;QAAA,4DAAY;QAC7C,uEAAgB;QAChB,+EAAsD;QAAA,qEAAS;QAAA,4DAAW;QAC9E,4DAAiB;QACrB,4DAAM;QAEN,0EAAsC;QAClC,qFAAsE;QACpE,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,uEAAgB;QAChB,+EACG;QAAA,qEAAS;QAAA,4DAAW;QACzB,4DAAiB;QACnB,4DAAM;QAEN,0EAAsC;QACpC,qFAAsE;QACpE,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEAAiB;QACjB,+EACG;QAAA,qEAAS;QAAA,4DAAW;QACzB,4DAAiB;QACnB,4DAAM;QAEN,0EAAsC;QACpC,qFAAsE;QACpE,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,uEAAgB;QAChB,+EACG;QAAA,qEAAS;QAAA,4DAAW;QACzB,4DAAiB;QACnB,4DAAM;QAER,0EAAsC;QAClC,qFAAqC;QACjC,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,uEAAgB;QAChB,+EAAsD;QAAA,qEAAS;QAAA,4DAAW;QAC9E,4DAAiB;QACrB,4DAAM;QAEN,0EAAsC;QAClC,qFAAsE;QACpE,6EAAW;QAAA,+EAAmB;QAAA,4DAAY;QAC1C,uEAKE;QACF,uFAGyB;QACzB,sFAAyC;QAC3C,4DAAiB;QACnB,4DAAM;QAEN,0EAAsC;QACpC,qFAAqC;QACjC,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEAAiB;QACjB,+EAAsD;QAAA,qEAAS;QAAA,4DAAW;QAC9E,4DAAiB;QACrB,4DAAM;QAEN,0EAAsC;QAClC,qFAAqC;QACjC,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEAAiB;QACjB,+EAAsD;QAAA,qEAAS;QAAA,4DAAW;QAC9E,4DAAiB;QACrB,4DAAM;QAEV,4DAAM;;;QA3BM,2DAAwB;QAAxB,8EAAwB;QAKxB,0DAAc;QAAd,oEAAc;;;;;;;;;;;;;;;;;;;;;;;;;ACvEqB;AAEiB;AACT;AACA;AACQ;AACN;AACN;;AAW5C,MAAM,aAAa;;0EAAb,aAAa;0GAAb,aAAa;8GANf;YACP,yDAAY;YACZ,yEAAoB;YACpB,+DAAY;SACb;mIAEU,aAAa,mBAPT,gEAAgB,EAAE,wEAAgB,EAAE,kEAAc,EAAE,4DAAY,aAE7E,yDAAY;QACZ,yEAAoB;QACpB,+DAAY;;;;;;;;;;;;;;;;;;;ACd2C;;;AAYpD,MAAM,cAAc;IAGzB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAFnC,QAAG,GAAG,+EAAqB,GAAG,eAAe,CAAC;IAER,CAAC;IAE/C,iBAAiB,CAAC,QAAmB;QACnC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CACzB,IAAI,CAAC,GAAG,EACR,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;;4EAdU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAHb,MAAM","file":"src_app_modules_setting_setting_module_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { SettingService } from 'src/app/services/setting.service';\r\nimport { SnackService } from 'src/app/services/snack.service';\r\n\r\n@Component({\r\n  selector: 'app-email',\r\n  templateUrl: './email.component.html',\r\n  styleUrls: ['./email.component.css']\r\n})\r\nexport class EmailComponent implements OnInit {\r\n\r\n  emailGroup: FormGroup;\r\n  hide = true;\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _settingsService: SettingService,\r\n    private _snackService: SnackService,\r\n  ) { \r\n    this.emailGroup = this._formBuilder.group({\r\n      settingsEmail: new FormControl('', [Validators.email, Validators.required]),\r\n      settingsPassword: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this._settingsService.getSettingsForUser().subscribe(i=>{\r\n      this.emailGroup.setValue({\r\n        settingsEmail: i['data'].settingEmail || \"\",\r\n        settingsPassword: i['data'].settingPassword || \"\",\r\n      });\r\n    })\r\n  }\r\n\r\n  saveEmailSetting() {\r\n    if (this.emailGroup.invalid) {\r\n      this._snackService.presentError('Datos Invalidos');\r\n      return;\r\n    }\r\n\r\n    this._settingsService\r\n      .configureSettings({\r\n        settingPassword: this.emailGroup.value.settingsPassword,\r\n        settingEmail: this.emailGroup.value.settingsEmail,\r\n      })\r\n      .subscribe((i) => {\r\n        this._snackService.presentSuccess('Datos Actualizados con Éxito');\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<h1 style=\"font-weight: 500; font-size: 24px\">Configuración</h1>\r\n<hr />\r\n<!--EMAIL SETTINGS-->\r\n<div class=\"row\">\r\n  <div class=\"col d-flex justify-content-start align-items-center\">\r\n    <i class=\"fas fa-envelope mx-2\" style=\"font-size: 20px\"></i>\r\n    <h2 style=\"font-weight: 400; font-size: 20px\" class=\"mt-3\">\r\n      Email Settings\r\n    </h2>\r\n  </div>\r\n</div>\r\n\r\n<h3><strong>!! IMPORTANTE !!</strong></h3>\r\n<p>\r\n  Si va a configurar un \"Gmail\", debe habilitar el acceso a aplicaciones menos\r\n  seguras, o colocar una contraseña de aplicación, como indica el siguiente link\r\n  a continuación:\r\n  <a href=\"javascript:window.open('https://support.google.com/accounts/answer/6010255?hl=es-419#zippy=','','toolbar=yes');void 0\"\r\n    >Link</a\r\n  >\r\n</p>\r\n\r\n<div class=\"row py-2 px-2\">\r\n  <form [formGroup]=\"emailGroup\" (ngSubmit)=\"saveEmailSetting()\">\r\n    <div class=\"col-10 col-sm-6 col-md-4 py-2\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          type=\"email\"\r\n          autocomplete=\"off\"\r\n          formControlName=\"settingsEmail\"\r\n          matInput\r\n          placeholder=\"Ex. pat@example.com\"\r\n        />\r\n        <mat-error\r\n          *ngIf=\"\r\n            emailGroup.get('settingsEmail').hasError('invalid') &&\r\n            emailGroup.get('settingsEmail').touched\r\n          \"\r\n        >\r\n          Por favor, ingrese un email valido.\r\n        </mat-error>\r\n        <mat-error\r\n          *ngIf=\"\r\n            emailGroup.get('settingsEmail').hasError('required') &&\r\n            emailGroup.get('settingsEmail').touched\r\n          \"\r\n        >\r\n          El Email es <strong>requerido</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          matInput\r\n          autocomplete=\"off\"\r\n          [type]=\"hide ? 'password' : 'text'\"\r\n          formControlName=\"settingsPassword\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          mat-icon-button\r\n          matSuffix\r\n          (click)=\"hide = !hide\"\r\n          [attr.aria-label]=\"'Hide password'\"\r\n          [attr.aria-pressed]=\"hide\"\r\n        >\r\n          <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary my-2\">Guardar</button>\r\n  </form>\r\n</div>\r\n\r\n<hr />\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.css']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 class=\"text-center py-2\">Preguntas frecuentes sobre UndertakeData</h1>\r\n<mat-accordion>\r\n    <mat-expansion-panel class=\"my-3\" style=\"max-width: 85%; margin: auto; border-radius: 8px;\">\r\n        <mat-expansion-panel-header>  \r\n          <mat-panel-title style=\"font-weight: 500; font-size: 18px;\">\r\n            ¿Cómo configurar mi correo Gmail?\r\n          </mat-panel-title>        \r\n        </mat-expansion-panel-header>      \r\n        <h3 style=\"font-weight: 400;\">Debes solicitar de la siguiente manera la “Contraseña de aplicación” de Google, lo cual no es algo complicado, y podrás hacerlo en unos pocos pasos. \r\n            Esto es necesario dado que es un requisito de Google para configurar tu cuenta con nuestros servidores. Seguí este instructivo: \r\n            <br>\r\n            1. Ingresá a <a href=\"https://myaccount.google.com\">www.myaccount.google.com</a> e inicia sesión en tu cuenta de Google.\r\n            <br>\r\n            2. Hacé click en el apartado de ‘‘Seguridad’’ que está cuarta en la lista de la izquierda del panel.\r\n            <br>\r\n            3. Una vez en la pestaña, deslizá hacia abajo hasta un subtítulo llamado ‘‘Acceso a Google’’. Allí haz click en ‘‘Activar verificación de dos pasos’’. Si la verificación está activada aparecerá‘ SI’.\r\n            <br>\r\n            4. Una vez activada la verificación en dos pasos, debés requerir la contraseña de aplicación, desde ‘‘Contraseñas de aplicaciones’’. \r\n            <br>\r\n            5. Luego, por seguridad, deberás ingresar nuevamente tu contraseña de Google. \r\n            <br>\r\n            6. Una vez en el panel de contraseñas de aplicación, debes elegir la app ‘‘Otra (nombre personalizado)’’, que está última en la lista. Y allí colocar: Undertake.\r\n            <br>\r\n            Para obtener el código deben tocar en ‘‘Generar’’.\r\n            <br>\r\n              7. De esa forma, se generará un código de letras y espacios que debes copiar y guardar (respetando el espaciado entre las letras).\r\n              <br>\r\n              8. Ingresá en Undertake.ar y dirígete al panel de configuración (click en las tres rayitas de arriba a la izquierda). Luego, clickea en ‘‘Configurar email’’. \r\n              <br>\r\n              9. Allí debés ingresar tu email y la contraseña de aplicación que copiaste. Y de esta forma podrás enviar emails por tu cuenta de Google (Gmail).\r\n\r\n            </h3>\r\n             \r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel class=\"my-3\" style=\"max-width: 85%; margin: auto; border-radius: 8px;\">\r\n        <mat-expansion-panel-header>  \r\n          <mat-panel-title style=\"font-weight: 500; font-size: 18px;\">\r\n            ¿Cómo configurar mi correo electrónico (Si NO es Gmail)?  \r\n          </mat-panel-title>        \r\n        </mat-expansion-panel-header>      \r\n        <h3 style=\"font-weight: 400;\">De esta forma debes sincronizar tu correo electrónico si NO tienes Gmail (es decir, si utilizas Hotmail, Outlook, Live y otros servicios): Debes ingresar al panel de control de UndertakeData y hacer click en “Configurar email”, y completar allí con los datos de tu usuario de correo electrónico, es decir, con la dirección de correo y la contraseña real que utilizas en este servicio.\r\n        </h3>   \r\n      </mat-expansion-panel>\r\n\r\n\r\n      <mat-expansion-panel class=\"my-3\" style=\"max-width: 85%; margin: auto; border-radius: 8px;\">\r\n        <mat-expansion-panel-header>  \r\n          <mat-panel-title style=\"font-weight: 500; font-size: 18px;\">\r\n            ¿Cómo enviar Emails?  \r\n          </mat-panel-title>        \r\n        </mat-expansion-panel-header>      \r\n        <h3 style=\"font-weight: 400;\">Sigue estos 5 simples pasos:\r\n            <br>\r\n            1. Primero debes seleccionar todos los contactos a los cuales desees enviarles el mensaje.\r\n            <br>\r\n            2. Luego, debes pulsar el botón “Enviar mensaje” que aparece arriba a la derecha de tu lista de contactos, en el panel principal.\r\n            <br>\r\n            3. Seleccionar la opción de “Mail”.\r\n            <br>\r\n            4. Ahora, debes escribir el mensaje que desees (puedes utilizar tarjetas de variantes, las cuales están explicadas en esta sección de preguntas frecuentes). \r\n            <br>\r\n            5. Listo! solo presiona enviar.           \r\n        </h3>   \r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel class=\"my-3\" style=\"max-width: 85%; margin: auto; border-radius: 8px;\">\r\n        <mat-expansion-panel-header>  \r\n          <mat-panel-title style=\"font-weight: 500; font-size: 18px;\">\r\n            ¿Cómo crear mensajes personalizados? \r\n          </mat-panel-title>        \r\n        </mat-expansion-panel-header>      \r\n        <h3 style=\"font-weight: 400;\">Undertake Data te permite fácilmente enviar mensajes personalizados a todos tus contactos, escribiendo solo un mensaje. A continuación te explicamos como hacer que tu mensaje se personalice automáticamente: \r\n          <br>\r\n\r\n            Una vez que hayas seleccionado los contactos que le quieras escribir, se te abrirá una ventana para que escribas el mensaje que quieras enviarles. \r\n            <br>\r\n            En la parte inferior de la ventana mencionada, se encuentran unos botones (o tarjetas)\r\n            <br>\r\n            Estas son las variantes personalizables. Por lo tanto, cada vez que cliquees en una de ellas, se pegarán en tu mensaje, y esto hará que nuestro software interprete que en cada lugar de la variante, debe poner los datos de las personas con las cuales desees comunicarte, tomando la información que escribiste al crear el contacto en cuestión.\r\n            <br>\r\n            <br>\r\n            ¿Qué significa cada variante?\r\n            <br>\r\n           <br>\r\n            Firstname: Nombre de pila\r\n            <br>\r\n            Lastname: Apellido\r\n            <br>\r\n            Address: Dirección\r\n            <br>\r\n            Phone: Número de teléfono\r\n            <br>\r\n            Email: Email\r\n            <br>\r\n            Birthdate: Fecha de cumpleaños.\r\n            <br>\r\n             <hr>\r\n            Para facilitar la comprensión, daremos un ejemplo:\r\n            <br>\r\n            <br>\r\n            Usted selecciona 3 contactos: Maria, Juan y Gustavo. Luego elige enviarles un mensaje. Y escribe: “Hola (firstname) ¿Cómo está?” y luego envía el mensaje. El software enviará 3 mensajes distintos, uno a Maria que dirá “Hola Maria ¿Cómo está?’’; otro a Juan, que dirá: “Hola Juan ¿Cómo está?’’; y otro a Gustavo, que dirá: “Hola Gustavo ¿Cómo está?’’.\r\n            <br>\r\n            Nota: Es importante que los datos de las variantes que usted escriba se encuentren cargados dentro de la base de datos. \r\n        </h3>   \r\n      </mat-expansion-panel>\r\n\r\n\r\n      <mat-expansion-panel class=\"my-3\" style=\"max-width: 85%; margin: auto; border-radius: 8px;\">\r\n        <mat-expansion-panel-header>  \r\n          <mat-panel-title style=\"font-weight: 500; font-size: 18px;\">\r\n            ¿Cómo cargar clientes? \r\n          </mat-panel-title>        \r\n        </mat-expansion-panel-header>      \r\n        <h3 style=\"font-weight: 400;\">Para cargar tus clientes, debes tocar el botón “Añadir contacto” que figura arriba y a la derecha de tu lista de contactos. Completar toda la información que desees, y hacer clic en crear.\r\n        </h3>   \r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel class=\"my-3\" style=\"max-width: 85%; margin: auto; border-radius: 8px;\">\r\n        <mat-expansion-panel-header>  \r\n          <mat-panel-title style=\"font-weight: 500; font-size: 18px;\">\r\n            ¿Cuántos mails puedo enviar por día?\r\n          </mat-panel-title>        \r\n        </mat-expansion-panel-header>      \r\n        <h3 style=\"font-weight: 400;\">La cantidad de mails permitidos por día, por usuario se limita a 500. Este límite lo imponen los servicios de correo electrónico.\r\n          <br>\r\n        </h3>   \r\n      </mat-expansion-panel>\r\n\r\n</mat-accordion>\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Renderer2, Inject } from '@angular/core';\r\nimport { SnackService } from 'src/app/services/snack.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css'],\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n\r\n  constructor(private renderer2: Renderer2,\r\n  @Inject(DOCUMENT) private _document,\r\n  private _snackServicio: SnackService) {}\r\n\r\n  ngOnInit(): void {\r\n   const s = this.renderer2.createElement('script');\r\n   s.type = 'text/javascript';\r\n   s.src = 'https://sdk.mercadopago.com/js/v2';\r\n   s.text = ``;\r\n   this.renderer2.appendChild(this._document.body,s)\r\n\r\n  let mp = new (<any>window)['MercadoPago']('TEST-72622931-dfca-4f26-8e8c-31b7be007517', {\r\n    locale: 'es-AR',\r\n  })\r\n\r\n  mp.checkout({\r\n    preference: {\r\n      id: '443135971-10ffa0b1-00c9-4771-b943-c6367271f5ae',\r\n    },\r\n    render: {\r\n      container: '.cho-container', // Indica dónde se mostrará el botón de pago\r\n      label: 'Pagar', // Cambia el texto del botón de pago (opcional)\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  mercadoPago(){\r\n    this._snackServicio.presentInfo(\"Actualmente estamos trabajando en la integración con Mercado Pago\")\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-10 col-sm-8 col-md-6 col-lg-4\">\r\n            <div class=\"text-center cont\" style=\"border: 1px solid rgb(124, 118, 118); border-radius: 4px; padding-bottom: 10px;\">\r\n                <img src=\"../../../../assets/mpago.jpg\" alt=\"\" class=\"img-fluid\">\r\n                <button (click)=\"mercadoPago()\" mat-flat-button color=\"primary\" style=\"width: 90%;\">Activar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SettingComponent } from './setting.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { EmailComponent } from './email/email.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: SettingComponent},\r\n  {path: 'payment', component: PaymentComponent},\r\n  {path: 'email', component: EmailComponent},\r\n  {path: 'faq', component: FaqComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css'],\r\n})\r\n\r\nexport class SettingComponent implements OnInit {\r\n\r\n  dataGroup: FormGroup;\r\n\r\n\r\n  constructor( \r\n    private _formBuilder: FormBuilder\r\n\r\n     ){\r\n   /*  this.dataGroup = this._formBuilder.group({\r\n      setName: new FormControl(''),\r\n      setLastname: new FormControl(''),\r\n      setEmpresa: new FormControl(''),\r\n      setCountry: new FormControl(''),\r\n      setCity: new FormControl(''),\r\n      setCel: new FormControl(''),\r\n      setMail: new FormControl('', [Validators.email]),\r\n    }) */\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<h1>Configuración de usuario</h1>\r\n<div class=\"row justify-content-center text-centerss\">\r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input matInput >\r\n            <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\">mode_edit</mat-icon>\r\n        </mat-form-field>\r\n    </div>\r\n    \r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Apellido</mat-label>\r\n            <input matInput >\r\n            <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\">mode_edit</mat-icon>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Empresa/Emprendimiento</mat-label>\r\n            <input matInput>\r\n            <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\">mode_edit</mat-icon>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field style=\"width: 90%; margin: auto\" appearance=\"outline\">\r\n          <mat-label>Pais</mat-label>\r\n          <input matInput>\r\n          <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\"\r\n            >mode_edit</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field style=\"width: 90%; margin: auto\" appearance=\"outline\">\r\n          <mat-label>Provincia</mat-label>\r\n          <input matInput >\r\n          <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\"\r\n            >mode_edit</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field style=\"width: 90%; margin: auto\" appearance=\"outline\">\r\n          <mat-label>Ciudad</mat-label>\r\n          <input matInput>\r\n          <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\"\r\n            >mode_edit</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Sexo</mat-label>\r\n            <input matInput>\r\n            <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\">mode_edit</mat-icon>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field style=\"width: 90%; margin: auto\" appearance=\"outline\">\r\n          <mat-label>Fecha de nacimiento</mat-label>\r\n          <input\r\n            matInput\r\n            autocomplete=\"off\"\r\n            [matDatepicker]=\"picker\"\r\n            placeholder=\"DD/MM/AA\"\r\n          />\r\n          <mat-datepicker-toggle\r\n            matSuffix\r\n            [for]=\"picker\"\r\n          ></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Telefono</mat-label>\r\n            <input matInput >\r\n            <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\">mode_edit</mat-icon>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-10 col-sm-6 col-md-4\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput >\r\n            <mat-icon matSuffix style=\"color: rgb(161, 157, 157)\">mode_edit</mat-icon>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SettingRoutingModule } from './setting-routing.module';\r\nimport { SettingComponent } from './setting.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { EmailComponent } from './email/email.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [SettingComponent, PaymentComponent, EmailComponent, FaqComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SettingRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class SettingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\ninterface ISettings {\r\n  settingEmail?: string,\r\n  settingPassword?: string,\r\n  tokenMercadoPago?: string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class SettingService {\r\n  private url = environment.serverUrl + 'auth/settings';\r\n\r\n  constructor(private _httpClient: HttpClient) {}\r\n\r\n  configureSettings(settings: ISettings) {\r\n    return this._httpClient.put(\r\n      this.url,\r\n      settings\r\n    );\r\n  }\r\n\r\n  getSettingsForUser(){\r\n    return this._httpClient.get(this.url);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}