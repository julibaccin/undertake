{"version":3,"sources":["./src/app/services/sites.service.ts","./src/app/services/snack.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAQO,MAAM,YAAY;IAEvB,YACU,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAC1B,CAAC;;wEAJI,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;ACAb,MAAM,YAAY;IAEvB,YAAoB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAAG,CAAC;IAE9C,YAAY,CAAC,OAAe;QAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,cAAc,CAAC,OAAe;QAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9D,CAAC;;wEAdU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IProduct, ISite } from '../interfaces/Sites/ISite';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SitesService {\r\n\r\n  constructor(\r\n    private _toastr: ToastrService\r\n    ) { }\r\n\r\n  // async getSite(url: string){\r\n  //   try {\r\n  //     return this._fbFirestore.collection<ISite>('sites').doc(url).get()\r\n  //   } catch (error) {\r\n  //     console.log(\"SitesService:getSite\", error)\r\n  //     return null;\r\n  //   }\r\n  // }\r\n\r\n  // async getProductsSite(siteId){\r\n  //   try {\r\n  //     return this._fbFirestore.collection<ISite>('sites').doc(siteId).collection<IProduct>('products').get();\r\n  //   } catch (error) {\r\n  //     console.log(\"SitesService:getSite\", error)\r\n  //     return null;\r\n  //   }\r\n  // }\r\n\r\n  // async getUserSites(){\r\n\r\n  // }\r\n\r\n  // async changeActive(iddoc, value: boolean){\r\n  //   try {\r\n  //     await this._fbFirestore.collection('sites').doc(iddoc).update({\r\n  //       active: value\r\n  //     })\r\n  //     this._toastr.success('Estado cambiado')\r\n  //   } catch (error) {\r\n  //     this._toastr.error(error.message)\r\n  //     console.log(\"SitesService:changeActive\", error)\r\n  //   }\r\n  // }\r\n\r\n  // async addSite(dataSite: ISite): Promise<boolean>{\r\n  //   try {\r\n  //     const resp = await this._fbFirestore.collection('sites').doc(dataSite.urlSite).get().toPromise()\r\n  //       if(resp.exists) { \r\n  //         this._toastr.warning('La url ya está en uso')\r\n  //         return false; \r\n  //       }\r\n  //       await this._fbFirestore.collection('sites').doc(dataSite.urlSite).set(dataSite)\r\n  //       this._toastr.success('Página creada exitosamente')\r\n  //       return true;\r\n  //   } catch (error) {\r\n  //     console.log(\"SitesService:addSiteEcommerce\", error)\r\n  //     this._toastr.error(error.message)\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // async updateSiteEcommerce(dataSite: ISite): Promise<boolean>{\r\n  //   try {\r\n  //   const resp = await this._fbFirestore.collection('sites').doc(dataSite.urlSite).update( {dataSite} )\r\n  //   this._toastr.success('Pagina actualizada con exito')\r\n  //   return true\r\n\r\n  //   } catch (error) {\r\n  //     console.log(\"SitesService:updateSiteEcommerce\", error)\r\n  //     this._toastr.error(error.message)\r\n  //     return false\r\n  //   }\r\n  // }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SnackService {\r\n    \r\n  constructor(private _toastr: ToastrService) {}\r\n\r\n  presentError(message: string) {\r\n    this._toastr.error(message, 'Error', { timeOut: 3000 });\r\n  }\r\n\r\n  presentInfo(message: string) {\r\n    this._toastr.info(message, 'Info', { timeOut: 3000 });\r\n  }\r\n\r\n  presentSuccess(message: string) {\r\n    this._toastr.success(message, 'Success', { timeOut: 3000 });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}